{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { CAMPSITES } from '../../app/shared/CAMPSITES';\nconst initialState = {\n  campsitesArray: CAMPSITES\n};\nconst campsitesSlice = createSlice({\n  name: 'campsites',\n  initialState\n});\nexport const campsitesReducer = campsitesSlice.reducer;\nexport const selectAllCampsites = () => {\n  return CAMPSITES;\n};\nexport const selectCampsiteById = id => {\n  return CAMPSITES.find(campsite => campsite.id === parseInt(id));\n};\nexport const selectFeaturedCampsite = () => {\n  return CAMPSITES.find(campsite => campsite.featured);\n};","map":{"version":3,"sources":["/Users/juliadarwish/Desktop/NucampFolder/WebDev/3-React/nucampsite /src/features/campsites/campsitesSlice.js"],"names":["createSlice","CAMPSITES","initialState","campsitesArray","campsitesSlice","name","campsitesReducer","reducer","selectAllCampsites","selectCampsiteById","id","find","campsite","parseInt","selectFeaturedCampsite","featured"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAEF;AADC,CAArB;AAIA,MAAMG,cAAc,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,WADyB;AAE/BH,EAAAA;AAF+B,CAAD,CAAlC;AAKA,OAAO,MAAMI,gBAAgB,GAAGF,cAAc,CAACG,OAAxC;AAEP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAOP,SAAP;AACH,CAFM;AAIP,OAAO,MAAMQ,kBAAkB,GAAIC,EAAD,IAAQ;AACtC,SAAOT,SAAS,CAACU,IAAV,CAAgBC,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBG,QAAQ,CAACH,EAAD,CAArD,CAAP;AACH,CAFM;AAIP,OAAO,MAAMI,sBAAsB,GAAG,MAAM;AACxC,SAAOb,SAAS,CAACU,IAAV,CAAgBC,QAAD,IAAcA,QAAQ,CAACG,QAAtC,CAAP;AACH,CAFM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { CAMPSITES } from '../../app/shared/CAMPSITES';\n\nconst initialState = {\n    campsitesArray: CAMPSITES\n};\n\nconst campsitesSlice = createSlice({\n    name: 'campsites',\n    initialState\n});\n\nexport const campsitesReducer = campsitesSlice.reducer;\n\nexport const selectAllCampsites = () => {\n    return CAMPSITES;\n};\n\nexport const selectCampsiteById = (id) => {\n    return CAMPSITES.find((campsite) => campsite.id === parseInt(id));\n};\n\nexport const selectFeaturedCampsite = () => {\n    return CAMPSITES.find((campsite) => campsite.featured);\n};"]},"metadata":{},"sourceType":"module"}